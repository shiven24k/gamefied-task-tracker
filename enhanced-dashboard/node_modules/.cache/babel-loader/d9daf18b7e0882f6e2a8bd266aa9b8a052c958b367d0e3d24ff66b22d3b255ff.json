{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shiven\\\\Downloads\\\\GamefiedTaskTracker\\\\enhanced-dashboard\\\\src\\\\Page\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\nimport { Progress } from '../../components/ui/progress';\nimport { Input } from '../../components/ui/input';\nimport { Button } from '../../components/ui/button';\nimport { Sword, Heart, Coins, Star, CheckCircle, Plus, RefreshCw, Shield } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamifiedDashboard = () => {\n  _s();\n  const [playerStats, setPlayerStats] = useState({\n    name: \"Shiven\",\n    hp: 100,\n    maxHp: 100,\n    gold: 127,\n    level: 1,\n    xp: 129,\n    maxXp: 200,\n    streak: 0,\n    lastDay: format(new Date(), 'yyyy-MM-dd')\n  });\n  const [tasks, setTasks] = useState([{\n    name: \"PWA\",\n    xp: 80,\n    gold: 77,\n    status: \"Not started\",\n    tags: [\"Development\"],\n    isDaily: true\n  }, {\n    name: \"DSA Question\",\n    xp: 23,\n    gold: 43,\n    status: \"Not started\",\n    tags: [\"Study\"],\n    isDaily: true\n  }, {\n    name: \"Personal Development\",\n    xp: 20,\n    gold: 1,\n    status: \"Not started\",\n    tags: [\"Books\", \"Exercise\"],\n    isDaily: true\n  }, {\n    name: \"Project\",\n    xp: 6,\n    gold: 6,\n    status: \"Not started\",\n    tags: [\"Development\"],\n    isDaily: false\n  }]);\n  const [newTask, setNewTask] = useState({\n    name: \"\",\n    xp: 0,\n    gold: 0,\n    tags: \"\",\n    isDaily: false\n  });\n  const checkLevelUp = (currentXp, currentLevel, currentMaxXp) => {\n    if (currentXp >= currentMaxXp) {\n      const remainingXp = currentXp - currentMaxXp;\n      const newLevel = currentLevel + 1;\n      const newMaxXp = Math.floor(currentMaxXp * 1.5);\n      return {\n        level: newLevel,\n        xp: remainingXp,\n        maxXp: newMaxXp\n      };\n    }\n    return null;\n  };\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    const task = newTasks[index];\n    setPlayerStats(prev => {\n      const newXp = prev.xp + task.xp;\n      const levelUp = checkLevelUp(newXp, prev.level, prev.maxXp);\n      let newStreak = prev.streak;\n      const today = format(new Date(), 'yyyy-MM-dd');\n      if (today !== prev.lastDay) {\n        newStreak = prev.streak + 1;\n      }\n      if (levelUp) {\n        return {\n          ...prev,\n          ...levelUp,\n          gold: prev.gold + task.gold + 100,\n          hp: Math.min(prev.maxHp, prev.hp + prev.streak * 2),\n          streak: newStreak,\n          lastDay: today\n        };\n      }\n      return {\n        ...prev,\n        gold: prev.gold + task.gold,\n        xp: newXp,\n        streak: newStreak,\n        lastDay: today\n      };\n    });\n    newTasks[index] = {\n      ...task,\n      status: \"Completed\"\n    };\n    setTasks(newTasks);\n  };\n  const resetDailyQuests = () => {\n    setTasks(prevTasks => {\n      return prevTasks.filter(task => task.isDaily).map(task => ({\n        ...task,\n        status: \"Not started\"\n      }));\n    });\n  };\n  const addNewTask = () => {\n    if (newTask.name && newTask.xp > 0 && newTask.gold > 0) {\n      setTasks(prev => [...prev, {\n        ...newTask,\n        status: \"Not started\",\n        tags: newTask.tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n      }]);\n      setNewTask({\n        name: \"\",\n        xp: 0,\n        gold: 0,\n        tags: \"\",\n        isDaily: false\n      });\n    }\n  };\n  const checkDailyTaskCompletion = () => {\n    const hasDailyCompleted = tasks.some(task => task.isDaily && task.status === \"Completed\");\n    return hasDailyCompleted;\n  };\n  useEffect(() => {\n    const now = new Date();\n    const startOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const twelveHoursLater = new Date(startOfDay.getTime() + 12 * 60 * 60 * 1000);\n    const hpDecreaseTimer = setTimeout(() => {\n      const hasDailyCompleted = checkDailyTaskCompletion();\n      setPlayerStats(prev => {\n        const today = format(new Date(), 'yyyy-MM-dd');\n        let newStreak = prev.streak;\n        if (today !== prev.lastDay) {\n          newStreak = 0;\n        }\n        let hpReduction = prev.hp;\n        if (newStreak === 0 && prev.streak > 0) {\n          hpReduction -= 10;\n        }\n        if (!hasDailyCompleted) {\n          if (new Date() > twelveHoursLater) {\n            hpReduction -= 5;\n          } else {\n            hpReduction -= 1;\n          }\n        }\n        return {\n          ...prev,\n          hp: Math.max(0, hpReduction),\n          streak: newStreak,\n          lastDay: today\n        };\n      });\n    }, twelveHoursLater - now);\n    return () => clearTimeout(hpDecreaseTimer);\n  }, [tasks]);\n  useEffect(() => {\n    const now = new Date();\n    const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    const timeUntilMidnight = tomorrow - now;\n    const resetTimer = setTimeout(() => {\n      setTasks(prevTasks => {\n        return prevTasks.filter(task => task.isDaily).map(task => ({\n          ...task,\n          status: \"Not started\"\n        }));\n      });\n    }, timeUntilMidnight);\n    return () => clearTimeout(resetTimer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-white min-h-screen flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto space-y-4 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Star, {\n              className: \"w-6 h-6 text-yellow-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), playerStats.name, \"'s Stats (Level \", playerStats.level, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Heart, {\n                className: \"text-red-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"HP: \", playerStats.hp, \"/\", playerStats.maxHp]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Coins, {\n                className: \"text-yellow-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Gold: \", playerStats.gold]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Sword, {\n                className: \"text-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Level: \", playerStats.level]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Shield, {\n                className: \"text-green-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Streak: \", playerStats.streak]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-400 mb-1\",\n              children: \"XP Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              value: playerStats.xp / playerStats.maxXp * 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-right mt-1 text-gray-300\",\n              children: [playerStats.xp, \"/\", playerStats.maxXp, \" XP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-6 h-6 text-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), \"Add New Quest\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Quest name\",\n              value: newTask.name,\n              onChange: e => setNewTask(prev => ({\n                ...prev,\n                name: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              placeholder: \"XP reward\",\n              value: newTask.xp,\n              onChange: e => setNewTask(prev => ({\n                ...prev,\n                xp: parseInt(e.target.value)\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              placeholder: \"Gold reward\",\n              value: newTask.gold,\n              onChange: e => setNewTask(prev => ({\n                ...prev,\n                gold: parseInt(e.target.value)\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Tags (comma-separated)\",\n              value: newTask.tags,\n              onChange: e => setNewTask(prev => ({\n                ...prev,\n                tags: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newTask.isDaily,\n                onChange: e => setNewTask(prev => ({\n                  ...prev,\n                  isDaily: e.target.checked\n                })),\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Daily Quest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addNewTask,\n              children: \"Add Quest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"w-6 h-6 text-green-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this), \"Daily Quests\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: resetDailyQuests,\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this), \"Reset Daily Quests\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-3 border rounded-lg border-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-lg\",\n                  children: [task.name, task.isDaily && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\",\n                    children: \"Daily\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-400\",\n                  children: [\"Rewards: \", task.xp, \" XP, \", task.gold, \" Gold\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-2 mt-1\",\n                  children: task.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\",\n                    children: tag\n                  }, tagIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => completeTask(index),\n                disabled: task.status === \"Completed\",\n                className: `px-4 py-2 rounded text-white\n                                             ${task.status === \"Completed\" ? \"bg-gray-600 cursor-not-allowed\" : \"bg-gradient-to-r from-green-500 to-green-600 hover:bg-green-700\"}`,\n                children: task.status === \"Completed\" ? \"Completed\" : \"Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(GamifiedDashboard, \"C/A2QCtHF63qlFvValUmPr4d1/8=\");\n_c = GamifiedDashboard;\nexport default GamifiedDashboard;\nvar _c;\n$RefreshReg$(_c, \"GamifiedDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Progress","Input","Button","Sword","Heart","Coins","Star","CheckCircle","Plus","RefreshCw","Shield","format","jsxDEV","_jsxDEV","GamifiedDashboard","_s","playerStats","setPlayerStats","name","hp","maxHp","gold","level","xp","maxXp","streak","lastDay","Date","tasks","setTasks","status","tags","isDaily","newTask","setNewTask","checkLevelUp","currentXp","currentLevel","currentMaxXp","remainingXp","newLevel","newMaxXp","Math","floor","completeTask","index","newTasks","task","prev","newXp","levelUp","newStreak","today","min","resetDailyQuests","prevTasks","filter","map","addNewTask","split","tag","trim","checkDailyTaskCompletion","hasDailyCompleted","some","now","startOfDay","getFullYear","getMonth","getDate","twelveHoursLater","getTime","hpDecreaseTimer","setTimeout","hpReduction","max","clearTimeout","tomorrow","timeUntilMidnight","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onChange","e","target","type","parseInt","checked","onClick","tagIndex","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Shiven/Downloads/GamefiedTaskTracker/enhanced-dashboard/src/Page/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\r\nimport { Progress } from '../../components/ui/progress';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Button } from '../../components/ui/button';\r\nimport { Sword, Heart, Coins, Star, CheckCircle, Plus, RefreshCw, Shield } from 'lucide-react';\r\nimport { format } from 'date-fns';\r\n\r\nconst GamifiedDashboard = () => {\r\n    const [playerStats, setPlayerStats] = useState({\r\n        name: \"Shiven\",\r\n        hp: 100,\r\n        maxHp: 100,\r\n        gold: 127,\r\n        level: 1,\r\n        xp: 129,\r\n        maxXp: 200,\r\n        streak: 0,\r\n        lastDay: format(new Date(), 'yyyy-MM-dd'),\r\n    });\r\n\r\n    const [tasks, setTasks] = useState([\r\n        { name: \"PWA\", xp: 80, gold: 77, status: \"Not started\", tags: [\"Development\"], isDaily: true },\r\n        { name: \"DSA Question\", xp: 23, gold: 43, status: \"Not started\", tags: [\"Study\"], isDaily: true },\r\n        { name: \"Personal Development\", xp: 20, gold: 1, status: \"Not started\", tags: [\"Books\", \"Exercise\"], isDaily: true },\r\n        { name: \"Project\", xp: 6, gold: 6, status: \"Not started\", tags: [\"Development\"], isDaily: false }\r\n    ]);\r\n\r\n    const [newTask, setNewTask] = useState({\r\n        name: \"\",\r\n        xp: 0,\r\n        gold: 0,\r\n        tags: \"\",\r\n        isDaily: false\r\n    });\r\n\r\n    const checkLevelUp = (currentXp, currentLevel, currentMaxXp) => {\r\n        if (currentXp >= currentMaxXp) {\r\n            const remainingXp = currentXp - currentMaxXp;\r\n            const newLevel = currentLevel + 1;\r\n            const newMaxXp = Math.floor(currentMaxXp * 1.5);\r\n            return {\r\n                level: newLevel,\r\n                xp: remainingXp,\r\n                maxXp: newMaxXp,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const completeTask = (index) => {\r\n        const newTasks = [...tasks];\r\n        const task = newTasks[index];\r\n\r\n        setPlayerStats(prev => {\r\n            const newXp = prev.xp + task.xp;\r\n            const levelUp = checkLevelUp(newXp, prev.level, prev.maxXp);\r\n             let newStreak = prev.streak;\r\n            \r\n            const today = format(new Date(), 'yyyy-MM-dd');\r\n            if(today !== prev.lastDay) {\r\n                newStreak = prev.streak + 1;\r\n            }\r\n\r\n            if (levelUp) {\r\n                return {\r\n                    ...prev,\r\n                    ...levelUp,\r\n                    gold: prev.gold + task.gold + 100,\r\n                     hp: Math.min(prev.maxHp, prev.hp + prev.streak * 2),\r\n                    streak: newStreak,\r\n                    lastDay: today\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...prev,\r\n                gold: prev.gold + task.gold,\r\n                xp: newXp,\r\n                streak: newStreak,\r\n                lastDay: today\r\n            };\r\n        });\r\n\r\n        newTasks[index] = { ...task, status: \"Completed\" };\r\n        setTasks(newTasks);\r\n    };\r\n\r\n     const resetDailyQuests = () => {\r\n        setTasks(prevTasks => {\r\n             return prevTasks.filter(task => task.isDaily).map(task => ({ ...task, status: \"Not started\" }));\r\n          });\r\n     };\r\n\r\n\r\n    const addNewTask = () => {\r\n        if (newTask.name && newTask.xp > 0 && newTask.gold > 0) {\r\n            setTasks(prev => [...prev, {\r\n                ...newTask,\r\n                status: \"Not started\",\r\n                tags: newTask.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\r\n            }]);\r\n\r\n            setNewTask({\r\n                name: \"\",\r\n                xp: 0,\r\n                gold: 0,\r\n                tags: \"\",\r\n                isDaily: false\r\n            });\r\n        }\r\n    };\r\n\r\n    const checkDailyTaskCompletion = () => {\r\n        const hasDailyCompleted = tasks.some(task => task.isDaily && task.status === \"Completed\");\r\n        return hasDailyCompleted;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const now = new Date();\r\n        const startOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n        const twelveHoursLater = new Date(startOfDay.getTime() + 12 * 60 * 60 * 1000);\r\n\r\n        const hpDecreaseTimer = setTimeout(() => {\r\n            const hasDailyCompleted = checkDailyTaskCompletion();\r\n            setPlayerStats(prev => {\r\n                 const today = format(new Date(), 'yyyy-MM-dd');\r\n                 let newStreak = prev.streak;\r\n                 if (today !== prev.lastDay) {\r\n                    newStreak = 0;\r\n                 }\r\n            let hpReduction = prev.hp;\r\n                if (newStreak === 0 && prev.streak > 0) {\r\n                    hpReduction -= 10;\r\n                }\r\n\r\n                if (!hasDailyCompleted) {\r\n                   if(new Date() > twelveHoursLater){\r\n                       hpReduction -= 5;\r\n                   }\r\n                    else{\r\n                      hpReduction -= 1;\r\n                   }\r\n               }\r\n\r\n                  return{\r\n                    ...prev,\r\n                    hp: Math.max(0, hpReduction),\r\n                    streak: newStreak,\r\n                    lastDay: today,\r\n                  }\r\n            });\r\n        }, twelveHoursLater - now);\r\n\r\n        return () => clearTimeout(hpDecreaseTimer);\r\n    }, [tasks]);\r\n\r\n    useEffect(() => {\r\n        const now = new Date();\r\n        const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\r\n        const timeUntilMidnight = tomorrow - now;\r\n        const resetTimer = setTimeout(() => {\r\n               setTasks(prevTasks => {\r\n                 return prevTasks.filter(task => task.isDaily).map(task => ({ ...task, status: \"Not started\" }));\r\n               });\r\n            }, timeUntilMidnight);\r\n           return () => clearTimeout(resetTimer);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"bg-gray-900 text-white min-h-screen flex items-center justify-center p-4\">\r\n            <div className=\"max-w-4xl mx-auto space-y-4 w-full\">\r\n                {/* Player Stats Card */}\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CardTitle className=\"flex items-center gap-2\">\r\n                            <Star className=\"w-6 h-6 text-yellow-400\" />\r\n                            {playerStats.name}'s Stats (Level {playerStats.level})\r\n                        </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <Heart className=\"text-red-500\" />\r\n                                <span>HP: {playerStats.hp}/{playerStats.maxHp}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <Coins className=\"text-yellow-500\" />\r\n                                <span>Gold: {playerStats.gold}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <Sword className=\"text-blue-500\" />\r\n                                <span>Level: {playerStats.level}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <Shield className=\"text-green-500\" />\r\n                                <span>Streak: {playerStats.streak}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-4\">\r\n                            <div className=\"text-sm text-gray-400 mb-1\">XP Progress</div>\r\n                            <Progress value={(playerStats.xp / playerStats.maxXp) * 100} />\r\n                            <div className=\"text-xs text-right mt-1 text-gray-300\">{playerStats.xp}/{playerStats.maxXp} XP</div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                {/* Add New Task Card */}\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CardTitle className=\"flex items-center gap-2\">\r\n                            <Plus className=\"w-6 h-6 text-green-400\" />\r\n                            Add New Quest\r\n                        </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            <Input\r\n                                placeholder=\"Quest name\"\r\n                                value={newTask.name}\r\n                                onChange={e => setNewTask(prev => ({ ...prev, name: e.target.value }))}\r\n                            />\r\n                            <Input\r\n                                type=\"name\"\r\n                                placeholder=\"XP reward\"\r\n                                value={newTask.xp}\r\n                                onChange={e => setNewTask(prev => ({ ...prev, xp: parseInt(e.target.value)}))}\r\n                            />\r\n                            <Input\r\n                                type=\"name\"\r\n                                placeholder=\"Gold reward\"\r\n                                value={newTask.gold}\r\n                                onChange={e => setNewTask(prev => ({ ...prev, gold: parseInt(e.target.value)}))}\r\n                            />\r\n                            <Input\r\n                                placeholder=\"Tags (comma-separated)\"\r\n                                value={newTask.tags}\r\n                                onChange={e => setNewTask(prev => ({ ...prev, tags: e.target.value }))}\r\n                            />\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={newTask.isDaily}\r\n                                    onChange={e => setNewTask(prev => ({ ...prev, isDaily: e.target.checked }))}\r\n                                    className=\"mr-2\"\r\n                                />\r\n                                <span>Daily Quest</span>\r\n                            </div>\r\n                            <Button onClick={addNewTask}>\r\n                                Add Quest\r\n                            </Button>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                {/* Tasks Card */}\r\n                <Card>\r\n                    <CardHeader>\r\n                        <div className=\"flex justify-between items-center\">\r\n                            <CardTitle className=\"flex items-center gap-2\">\r\n                                <CheckCircle className=\"w-6 h-6 text-green-400\" />\r\n                                Daily Quests\r\n                            </CardTitle>\r\n                            <Button onClick={resetDailyQuests} className=\"flex items-center gap-2\">\r\n                                <RefreshCw className=\"w-4 h-4\" />\r\n                                Reset Daily Quests\r\n                            </Button>\r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"space-y-4\">\r\n                            {tasks.map((task, index) => (\r\n                                <div key={index} className=\"flex items-center justify-between p-3 border rounded-lg border-gray-700\">\r\n                                    <div>\r\n                                        <div className=\"font-medium text-lg\">\r\n                                            {task.name}\r\n                                            {task.isDaily && (\r\n                                                <span className=\"ml-2 px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\">\r\n                                                    Daily\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"text-sm text-gray-400\">\r\n                                            Rewards: {task.xp} XP, {task.gold} Gold\r\n                                        </div>\r\n                                        <div className=\"flex gap-2 mt-1\">\r\n                                            {task.tags.map((tag, tagIndex) => (\r\n                                                <span key={tagIndex} className=\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\">\r\n                                                    {tag}\r\n                                                </span>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                    <button\r\n                                        onClick={() => completeTask(index)}\r\n                                        disabled={task.status === \"Completed\"}\r\n                                        className={`px-4 py-2 rounded text-white\r\n                                             ${\r\n                                                 task.status === \"Completed\"\r\n                                                     ? \"bg-gray-600 cursor-not-allowed\"\r\n                                                     : \"bg-gradient-to-r from-green-500 to-green-600 hover:bg-green-700\"\r\n                                             }`}\r\n                                    >\r\n                                        {task.status === \"Completed\" ? \"Completed\" : \"Complete\"}\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamifiedDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}