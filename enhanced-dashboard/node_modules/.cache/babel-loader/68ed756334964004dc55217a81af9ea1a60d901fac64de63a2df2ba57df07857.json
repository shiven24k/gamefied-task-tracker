{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shiven\\\\Downloads\\\\GamefiedTaskTracker\\\\enhanced-dashboard\\\\src\\\\Page\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\nimport { Progress } from '../../components/ui/progress';\nimport { Input } from '../../.';\nimport { Button } from '@/components/ui/button';\nimport { Sword, Heart, Coins, Star, CheckCircle, Plus, RefreshCw, Shield } from 'lucide-react';\nimport { format } from 'date-fns'; // Import date-fns for date manipulation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamifiedDashboard = () => {\n  _s();\n  const [playerStats, setPlayerStats] = useState({\n    name: \"Shiven\",\n    hp: 100,\n    maxHp: 100,\n    gold: 127,\n    level: 1,\n    xp: 129,\n    maxXp: 200,\n    streak: 0,\n    // New streak tracking\n    lastDay: format(new Date(), 'yyyy-MM-dd') // Track last day player was active\n  });\n  const [tasks, setTasks] = useState([{\n    name: \"PWA\",\n    xp: 80,\n    gold: 77,\n    status: \"Not started\",\n    tags: [\"Development\"],\n    isDaily: true\n  }, {\n    name: \"DSA Question\",\n    xp: 23,\n    gold: 43,\n    status: \"Not started\",\n    tags: [\"Study\"],\n    isDaily: true\n  }, {\n    name: \"Personal Development\",\n    xp: 20,\n    gold: 1,\n    status: \"Not started\",\n    tags: [\"Books\", \"Exercise\"],\n    isDaily: true\n  }, {\n    name: \"Project\",\n    xp: 6,\n    gold: 6,\n    status: \"Not started\",\n    tags: [\"Development\"],\n    isDaily: false\n  }]);\n  const [newTask, setNewTask] = useState({\n    name: \"\",\n    xp: 0,\n    gold: 0,\n    tags: \"\",\n    isDaily: false\n  });\n\n  // Level up function\n  const checkLevelUp = (currentXp, currentLevel, currentMaxXp) => {\n    if (currentXp >= currentMaxXp) {\n      const remainingXp = currentXp - currentMaxXp;\n      const newLevel = currentLevel + 1;\n      const newMaxXp = Math.floor(currentMaxXp * 1.5); // Increase XP requirement for next level\n\n      return {\n        level: newLevel,\n        xp: remainingXp,\n        maxXp: newMaxXp\n      };\n    }\n    return null;\n  };\n\n  // Complete task function\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    const task = newTasks[index];\n    setPlayerStats(prev => {\n      const newXp = prev.xp + task.xp;\n      const levelUp = checkLevelUp(newXp, prev.level, prev.maxXp);\n      let newStreak = prev.streak;\n\n      // Check if today is a new day for streak purposes\n      const today = format(new Date(), 'yyyy-MM-dd');\n      if (today !== prev.lastDay) {\n        newStreak = prev.streak + 1;\n      }\n      if (levelUp) {\n        return {\n          ...prev,\n          ...levelUp,\n          gold: prev.gold + task.gold + 100,\n          // Bonus gold for level up\n          hp: Math.min(prev.maxHp, prev.hp + prev.streak * 2),\n          // Restore HP on level up + streak bonus\n          streak: newStreak,\n          lastDay: today\n        };\n      }\n      return {\n        ...prev,\n        gold: prev.gold + task.gold,\n        xp: newXp,\n        streak: newStreak,\n        lastDay: today\n      };\n    });\n    newTasks[index] = {\n      ...task,\n      status: \"Completed\"\n    };\n    setTasks(newTasks);\n  };\n\n  // Reset daily quests\n  const resetDailyQuests = () => {\n    setTasks(prev => prev.map(task => ({\n      ...task,\n      status: task.isDaily ? \"Not started\" : task.status\n    })));\n  };\n\n  // Add new task\n  const addNewTask = () => {\n    if (newTask.name && newTask.xp > 0 && newTask.gold > 0) {\n      setTasks(prev => [...prev, {\n        ...newTask,\n        status: \"Not started\",\n        tags: newTask.tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n      }]);\n\n      // Reset form\n      setNewTask({\n        name: \"\",\n        xp: 0,\n        gold: 0,\n        tags: \"\",\n        isDaily: false\n      });\n    }\n  };\n\n  // Function to check if any daily tasks have been completed for hp reduction check\n  const checkDailyTaskCompletion = () => {\n    const hasDailyCompleted = tasks.some(task => task.isDaily && task.status === \"Completed\");\n    return hasDailyCompleted;\n  };\n\n  // Check for HP reduction logic\n  useEffect(() => {\n    const now = new Date();\n    const startOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const twelveHoursLater = new Date(startOfDay.getTime() + 12 * 60 * 60 * 1000);\n    const hpDecreaseTimer = setTimeout(() => {\n      const hasDailyCompleted = checkDailyTaskCompletion();\n      setPlayerStats(prev => {\n        // Check if today is a new day for streak purposes\n        const today = format(new Date(), 'yyyy-MM-dd');\n        let newStreak = prev.streak;\n        if (today !== prev.lastDay) {\n          newStreak = 0; // reset streak\n        }\n        let hpReduction = prev.hp;\n        // if the streak is broken then reduce the health\n        if (newStreak === 0 && prev.streak > 0) {\n          hpReduction -= 10;\n        }\n        if (!hasDailyCompleted) {\n          if (new Date() > twelveHoursLater) {\n            hpReduction -= 5; // reduce 5 hp if no task completed after 12 hours\n          } else {\n            hpReduction -= 1; // Reduce 1 hp if no tasks completed within the first 12hrs\n          }\n        }\n        return {\n          ...prev,\n          hp: Math.max(0, hpReduction),\n          // Ensure HP doesn't go below 0\n          streak: newStreak,\n          lastDay: today\n        };\n      });\n      // if there no tasks completed after 12hrs then deduct 5 hp if the streak was broken and deduct 10 hp\n    }, twelveHoursLater - now);\n    return () => clearTimeout(hpDecreaseTimer);\n  }, [tasks]);\n\n  // Auto-reset daily quests at midnight\n  useEffect(() => {\n    const now = new Date();\n    const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    const timeUntilMidnight = tomorrow - now;\n    const resetTimer = setTimeout(resetDailyQuests, timeUntilMidnight);\n    return () => clearTimeout(resetTimer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Star, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), playerStats.name, \"'s Stats (Level \", playerStats.level, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Heart, {\n              className: \"text-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"HP: \", playerStats.hp, \"/\", playerStats.maxHp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Coins, {\n              className: \"text-yellow-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Gold: \", playerStats.gold]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Sword, {\n              className: \"text-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Level: \", playerStats.level]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Shield, {\n              className: \"text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Streak: \", playerStats.streak]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500 mb-1\",\n            children: \"XP Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {\n            value: playerStats.xp / playerStats.maxXp * 100,\n            className: \"h-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-right mt-1\",\n            children: [playerStats.xp, \"/\", playerStats.maxXp, \" XP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), \"Add New Quest\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Quest name\",\n            value: newTask.name,\n            onChange: e => setNewTask(prev => ({\n              ...prev,\n              name: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"XP reward\",\n            value: newTask.xp,\n            onChange: e => setNewTask(prev => ({\n              ...prev,\n              xp: parseInt(e.target.value) || 0\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Gold reward\",\n            value: newTask.gold,\n            onChange: e => setNewTask(prev => ({\n              ...prev,\n              gold: parseInt(e.target.value) || 0\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Tags (comma-separated)\",\n            value: newTask.tags,\n            onChange: e => setNewTask(prev => ({\n              ...prev,\n              tags: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: newTask.isDaily,\n              onChange: e => setNewTask(prev => ({\n                ...prev,\n                isDaily: e.target.checked\n              })),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Daily Quest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addNewTask,\n            className: \"bg-green-500 hover:bg-green-600\",\n            children: \"Add Quest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-6 h-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 28\n            }, this), \"Daily Quests\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: resetDailyQuests,\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 34\n            }, this), \"Reset Daily Quests\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between p-3 border rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: [task.name, task.isDaily && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\",\n                  children: \"Daily\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"Rewards: \", task.xp, \" XP, \", task.gold, \" Gold\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2 mt-1\",\n                children: task.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\",\n                  children: tag\n                }, tagIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 46\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => completeTask(index),\n              disabled: task.status === \"Completed\",\n              className: `px-4 py-2 rounded ${task.status === \"Completed\" ? \"bg-gray-100 text-gray-400\" : \"bg-green-500 text-white hover:bg-green-600\"}`,\n              children: task.status === \"Completed\" ? \"Completed\" : \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 32\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n_s(GamifiedDashboard, \"essKgxzsZslFAZnI7O1hRUx/oYE=\");\n_c = GamifiedDashboard;\nexport default GamifiedDashboard;\nvar _c;\n$RefreshReg$(_c, \"GamifiedDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Progress","Input","Button","Sword","Heart","Coins","Star","CheckCircle","Plus","RefreshCw","Shield","format","jsxDEV","_jsxDEV","GamifiedDashboard","_s","playerStats","setPlayerStats","name","hp","maxHp","gold","level","xp","maxXp","streak","lastDay","Date","tasks","setTasks","status","tags","isDaily","newTask","setNewTask","checkLevelUp","currentXp","currentLevel","currentMaxXp","remainingXp","newLevel","newMaxXp","Math","floor","completeTask","index","newTasks","task","prev","newXp","levelUp","newStreak","today","min","resetDailyQuests","map","addNewTask","split","tag","trim","filter","checkDailyTaskCompletion","hasDailyCompleted","some","now","startOfDay","getFullYear","getMonth","getDate","twelveHoursLater","getTime","hpDecreaseTimer","setTimeout","hpReduction","max","clearTimeout","tomorrow","timeUntilMidnight","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onChange","e","target","type","parseInt","checked","onClick","tagIndex","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Shiven/Downloads/GamefiedTaskTracker/enhanced-dashboard/src/Page/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\r\nimport { Progress } from '../../components/ui/progress';\r\nimport { Input } from '../../.';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Sword, Heart, Coins, Star, CheckCircle, Plus, RefreshCw, Shield } from 'lucide-react';\r\nimport { format } from 'date-fns'; // Import date-fns for date manipulation\r\n\r\nconst GamifiedDashboard = () => {\r\n    const [playerStats, setPlayerStats] = useState({\r\n        name: \"Shiven\",\r\n        hp: 100,\r\n        maxHp: 100,\r\n        gold: 127,\r\n        level: 1,\r\n        xp: 129,\r\n        maxXp: 200,\r\n        streak: 0, // New streak tracking\r\n        lastDay: format(new Date(), 'yyyy-MM-dd'), // Track last day player was active\r\n    });\r\n\r\n    const [tasks, setTasks] = useState([\r\n        { name: \"PWA\", xp: 80, gold: 77, status: \"Not started\", tags: [\"Development\"], isDaily: true },\r\n        { name: \"DSA Question\", xp: 23, gold: 43, status: \"Not started\", tags: [\"Study\"], isDaily: true },\r\n        { name: \"Personal Development\", xp: 20, gold: 1, status: \"Not started\", tags: [\"Books\", \"Exercise\"], isDaily: true },\r\n        { name: \"Project\", xp: 6, gold: 6, status: \"Not started\", tags: [\"Development\"], isDaily: false }\r\n    ]);\r\n\r\n    const [newTask, setNewTask] = useState({\r\n        name: \"\",\r\n        xp: 0,\r\n        gold: 0,\r\n        tags: \"\",\r\n        isDaily: false\r\n    });\r\n\r\n    // Level up function\r\n    const checkLevelUp = (currentXp, currentLevel, currentMaxXp) => {\r\n      if (currentXp >= currentMaxXp) {\r\n        const remainingXp = currentXp - currentMaxXp;\r\n        const newLevel = currentLevel + 1;\r\n        const newMaxXp = Math.floor(currentMaxXp * 1.5); // Increase XP requirement for next level\r\n\r\n        return {\r\n          level: newLevel,\r\n          xp: remainingXp,\r\n          maxXp: newMaxXp,\r\n        };\r\n      }\r\n      return null;\r\n    };\r\n\r\n  // Complete task function\r\n    const completeTask = (index) => {\r\n        const newTasks = [...tasks];\r\n        const task = newTasks[index];\r\n\r\n      setPlayerStats(prev => {\r\n        const newXp = prev.xp + task.xp;\r\n        const levelUp = checkLevelUp(newXp, prev.level, prev.maxXp);\r\n        let newStreak = prev.streak;\r\n        \r\n         // Check if today is a new day for streak purposes\r\n        const today = format(new Date(), 'yyyy-MM-dd');\r\n        if(today !== prev.lastDay) {\r\n             newStreak = prev.streak + 1;\r\n        }\r\n\r\n        if (levelUp) {\r\n          return {\r\n            ...prev,\r\n            ...levelUp,\r\n            gold: prev.gold + task.gold + 100, // Bonus gold for level up\r\n             hp: Math.min(prev.maxHp, prev.hp + prev.streak * 2), // Restore HP on level up + streak bonus\r\n             streak: newStreak,\r\n             lastDay: today\r\n          };\r\n        }\r\n\r\n        return {\r\n            ...prev,\r\n            gold: prev.gold + task.gold,\r\n            xp: newXp,\r\n            streak: newStreak,\r\n            lastDay: today,\r\n        };\r\n      });\r\n\r\n        newTasks[index] = { ...task, status: \"Completed\" };\r\n        setTasks(newTasks);\r\n    };\r\n\r\n    // Reset daily quests\r\n    const resetDailyQuests = () => {\r\n        setTasks(prev =>\r\n            prev.map(task => ({\r\n                ...task,\r\n                status: task.isDaily ? \"Not started\" : task.status\r\n            }))\r\n        );\r\n    };\r\n\r\n    // Add new task\r\n    const addNewTask = () => {\r\n        if (newTask.name && newTask.xp > 0 && newTask.gold > 0) {\r\n            setTasks(prev => [...prev, {\r\n                ...newTask,\r\n                status: \"Not started\",\r\n                tags: newTask.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\r\n            }]);\r\n\r\n            // Reset form\r\n            setNewTask({\r\n                name: \"\",\r\n                xp: 0,\r\n                gold: 0,\r\n                tags: \"\",\r\n                isDaily: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Function to check if any daily tasks have been completed for hp reduction check\r\n    const checkDailyTaskCompletion = () => {\r\n        const hasDailyCompleted = tasks.some(task => task.isDaily && task.status === \"Completed\");\r\n        return hasDailyCompleted;\r\n    };\r\n\r\n    // Check for HP reduction logic\r\n     useEffect(() => {\r\n       const now = new Date();\r\n       const startOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n       const twelveHoursLater = new Date(startOfDay.getTime() + 12 * 60 * 60 * 1000);\r\n\r\n        const hpDecreaseTimer = setTimeout(() => {\r\n            const hasDailyCompleted = checkDailyTaskCompletion();\r\n            setPlayerStats(prev => {\r\n                 // Check if today is a new day for streak purposes\r\n                 const today = format(new Date(), 'yyyy-MM-dd');\r\n                 let newStreak = prev.streak;\r\n                 if (today !== prev.lastDay) {\r\n                     newStreak = 0; // reset streak\r\n                }\r\n            let hpReduction = prev.hp;\r\n            // if the streak is broken then reduce the health\r\n            if (newStreak === 0 && prev.streak > 0) {\r\n                hpReduction -= 10;\r\n            }\r\n                if (!hasDailyCompleted) {\r\n                    if(new Date() > twelveHoursLater){\r\n                    hpReduction -= 5; // reduce 5 hp if no task completed after 12 hours\r\n                  }\r\n                   else{\r\n                     hpReduction -= 1; // Reduce 1 hp if no tasks completed within the first 12hrs\r\n                   }\r\n                }\r\n\r\n                 return{\r\n                     ...prev,\r\n                     hp: Math.max(0, hpReduction), // Ensure HP doesn't go below 0\r\n                     streak: newStreak,\r\n                     lastDay: today,\r\n                 }\r\n            });\r\n            // if there no tasks completed after 12hrs then deduct 5 hp if the streak was broken and deduct 10 hp\r\n        }, twelveHoursLater - now);\r\n\r\n\r\n        return () => clearTimeout(hpDecreaseTimer);\r\n\r\n    }, [tasks]);\r\n  \r\n   // Auto-reset daily quests at midnight\r\n   useEffect(() => {\r\n    const now = new Date();\r\n    const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\r\n    const timeUntilMidnight = tomorrow - now;\r\n  \r\n    const resetTimer = setTimeout(resetDailyQuests, timeUntilMidnight);\r\n    return () => clearTimeout(resetTimer);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto p-4 space-y-4\">\r\n            {/* Player Stats Card */}\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                        <Star className=\"w-6 h-6\" />\r\n                        {playerStats.name}'s Stats (Level {playerStats.level})\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                   <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                       <div className=\"flex items-center gap-2\">\r\n                           <Heart className=\"text-red-500\" />\r\n                           <span>HP: {playerStats.hp}/{playerStats.maxHp}</span>\r\n                      </div>\r\n                       <div className=\"flex items-center gap-2\">\r\n                            <Coins className=\"text-yellow-500\" />\r\n                            <span>Gold: {playerStats.gold}</span>\r\n                       </div>\r\n                       <div className=\"flex items-center gap-2\">\r\n                            <Sword className=\"text-blue-500\" />\r\n                           <span>Level: {playerStats.level}</span>\r\n                       </div>\r\n                       <div className=\"flex items-center gap-2\">\r\n                            <Shield className=\"text-green-500\" />\r\n                           <span>Streak: {playerStats.streak}</span>\r\n                       </div>\r\n                   </div>\r\n                    <div className=\"mt-4\">\r\n                        <div className=\"text-sm text-gray-500 mb-1\">XP Progress</div>\r\n                        <Progress value={(playerStats.xp / playerStats.maxXp) * 100} className=\"h-2\" />\r\n                        <div className=\"text-xs text-right mt-1\">{playerStats.xp}/{playerStats.maxXp} XP</div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Add New Task Card */}\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                        <Plus className=\"w-6 h-6\" />\r\n                        Add New Quest\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <Input\r\n                            placeholder=\"Quest name\"\r\n                            value={newTask.name}\r\n                            onChange={e => setNewTask(prev => ({ ...prev, name: e.target.value }))}\r\n                        />\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder=\"XP reward\"\r\n                            value={newTask.xp}\r\n                            onChange={e => setNewTask(prev => ({ ...prev, xp: parseInt(e.target.value) || 0 }))}\r\n                        />\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder=\"Gold reward\"\r\n                            value={newTask.gold}\r\n                            onChange={e => setNewTask(prev => ({ ...prev, gold: parseInt(e.target.value) || 0 }))}\r\n                        />\r\n                         <Input\r\n                            placeholder=\"Tags (comma-separated)\"\r\n                            value={newTask.tags}\r\n                            onChange={e => setNewTask(prev => ({ ...prev, tags: e.target.value }))}\r\n                        />\r\n                       <div className=\"flex items-center gap-2\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={newTask.isDaily}\r\n                                onChange={e => setNewTask(prev => ({ ...prev, isDaily: e.target.checked }))}\r\n                                className=\"mr-2\"\r\n                            />\r\n                            <span>Daily Quest</span>\r\n                        </div>\r\n                        <Button onClick={addNewTask} className=\"bg-green-500 hover:bg-green-600\">\r\n                            Add Quest\r\n                        </Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n           {/* Tasks Card */}\r\n            <Card>\r\n                <CardHeader>\r\n                    <div className=\"flex justify-between items-center\">\r\n                         <CardTitle className=\"flex items-center gap-2\">\r\n                           <CheckCircle className=\"w-6 h-6\" />\r\n                           Daily Quests\r\n                         </CardTitle>\r\n                         <Button onClick={resetDailyQuests} className=\"flex items-center gap-2\">\r\n                                 <RefreshCw className=\"w-4 h-4\" />\r\n                                 Reset Daily Quests\r\n                         </Button>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                       {tasks.map((task, index) => (\r\n                           <div key={index} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                              <div>\r\n                                  <div className=\"font-medium\">\r\n                                      {task.name}\r\n                                      {task.isDaily && (\r\n                                         <span className=\"ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\">\r\n                                           Daily\r\n                                        </span>\r\n                                      )}\r\n                                  </div>\r\n                                 <div className=\"text-sm text-gray-500\">\r\n                                     Rewards: {task.xp} XP, {task.gold} Gold\r\n                                </div>\r\n                                  <div className=\"flex gap-2 mt-1\">\r\n                                       {task.tags.map((tag, tagIndex) => (\r\n                                             <span key={tagIndex} className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\">\r\n                                                {tag}\r\n                                             </span>\r\n                                       ))}\r\n                                  </div>\r\n                               </div>\r\n                               <button\r\n                                  onClick={() => completeTask(index)}\r\n                                  disabled={task.status === \"Completed\"}\r\n                                    className={`px-4 py-2 rounded ${\r\n                                        task.status === \"Completed\"\r\n                                           ? \"bg-gray-100 text-gray-400\"\r\n                                           : \"bg-green-500 text-white hover:bg-green-600\"\r\n                                   }`}\r\n                               >\r\n                                  {task.status === \"Completed\" ? \"Completed\" : \"Complete\"}\r\n                               </button>\r\n                           </div>\r\n                       ))}\r\n                    </div>\r\n                </CardContent>\r\n           </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamifiedDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}